name: graphite-prod

meta:
  grafana:
    user: ~
    pass: ~
  influxdb:
    user: ~
    password: ~
  riemann:
    pagerduty_api_key: ~
  network:
    range: ~
    reserved: ~
    dns: ~
    discovery_ip: ~
    gateway: ~
    subnet: ~
    security_groups: ~

director_uuid: (( merge ))

releases:
- name: graphite
  version: 0+dev.2
- name: grafana
  version: 2
- name: influxdb
  version: 3
- name: riemann
  version: 0.16.0

networks:
  - name: monitoring
    type: manual
    subnets:
      - range: (( meta.network.range ))
        reserved: (( meta.network.reserved ))
        gateway: (( meta.network.gateway ))
        dns: (( meta.network.dns ))
        static:
          - &discovery_static_ip (( meta.network.discovery_ip ))
        cloud_properties:
          security_groups: (( meta.network.security_groups ))
          subnet: (( meta.network.subnet ))

jobs:
- name: graphite
  templates:
  - {name: carbon, release: graphite}
  - {name: graphite-web, release: graphite}
  - {name: statsd, release: graphite}
  - {name: grafana, release: grafana}
  - {name: riemann, release: riemann}
  - {name: influxdb, release: influxdb}
  instances: 1
  resource_pool: medium_z1
  persistent_disk: 30000
  networks:
  - name: monitoring
    static_ips: [*discovery_static_ip]

- name: influxdb
  templates:
  - {name: influxdb, release: influxdb}
  instances: 1
  resource_pool: medium_z1
  persistent_disk: 30000
  networks:
  - name: monitoring
    static_ips: [*discovery_static_ip]

properties:
  env: graphite-prod
  carbon:
    storage_schemas:
    - name: default
      pattern: ".*"
      retentions: 1m:1d,5m:2y
    storage_aggregations:
    - name: my_storage_aggregation
      pattern: "^my\\.metrics\\.*"
      xFilesFactor: '0.5'
      aggregationMethod: average
    - name: my_storage_aggregation_2
      pattern: metrics$
      xFilesFactor: '0.1'
      aggregationMethod: max
  graphite-web:
    time_zone: Europe/London
    httpd:
      port: 80
    wsgi:
      inactivity-timeout: 60
  grafana:
    admin_username: (( meta.grafana.user ))
    admin_password: (( meta.grafana.pass ))
    listen_port: 3000
    root_url: https://grafana-prod.18f.gov
    datasource:
      database_type: "influxdb"
      database_name: "production"
      url: (( "http://" jobs.influxdb.networks.monitoring.static_ips.[0] ))
      name: "influxdb_production"
      user: (( meta.influxdb.user ))
      password: (( meta.influxdb.password ))

  influxdb:
    database: "production"
    user: (( meta.influxdb.user ))
    password: (( meta.influxdb.password ))
  riemann:
    pagerduty_api_key: (( meta.riemann.pagerduty_api_key ))

resource_pools:
- name: medium_z1
  network: monitoring
  size: 1
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk:
      size: 30000
      type: gp2
    availability_zone: us-east-1b

compilation:
  network: monitoring
  reuse_compilation_vms: true
  workers: 4
  cloud_properties:
    instance_type: t2.medium
    ephemeral_disk:
      size: 30000
      type: gp2
    availability_zone: us-east-1b

update:
  canaries: 1
  canary_watch_time: 1000-30000
  max_in_flight: 50
  serial: false
  update_watch_time: 1000-30000

