name: monitoring-production

meta:
  aws:
    access_key_id: ~
    secret_access_key: ~
  collectd:
    riemann_server: ~
  environment: ~
  grafana:
    user: ~
    pass: ~
    influxdb_user: ~
    influxdb_password: ~
    auth:
      github:
        client_id: ~
        client_secret: ~
        allowed_organizations: ~
        team_ids: ~
  influxdb:
    user: ~
    password: ~
    database: ~
  riemann:
    pagerduty_api_key: ~
    influxdb_user: ~
    influxdb_password: ~
  network:
    range: ~
    reserved: ~
    static: ~
    dns: ~
    gateway: ~
    subnet: ~
    security_groups: ~
  elbs: ~

director_uuid: (( merge ))

releases:
- name: grafana
  version: latest
- name: influxdb
  version: latest
- name: riemann
  version: latest
- name: collectd
  version: latest
- name: encrypt-blobstore
  version: latest
- name: fisma
  version: latest
- name: tripwire
  version: latest
- name: awslogs
  version: latest
- name: nessus-agent
  version: latest
- name: newrelic
  version: latest
- name: riemannc
  version: latest
- name: clamav
  version: latest
- name: snort
  version: latest

networks:
  - name: monitoring
    type: manual
    subnets:
      - range: (( meta.network.range ))
        reserved: (( meta.network.reserved ))
        gateway: (( meta.network.gateway ))
        dns: (( meta.network.dns ))
        static: (( meta.network.static ))
        cloud_properties:
          security_groups: (( meta.network.security_groups ))
          subnet: (( meta.network.subnet ))

jobs:
- name: monitoring
  templates:
  - {name: grafana, release: grafana}
  - {name: riemann, release: riemann}
  - {name: encrypt-blobstore, release: encrypt-blobstore}
  - {name: harden, release: fisma}
  - {name: tripwire, release: tripwire}
  - {name: awslogs, release: awslogs}
  - {name: nessus-agent, release: nessus-agent}
  - {name: newrelic-monitor, release: newrelic}
  - {name: riemannc, release: riemannc}
  - {name: clamav, release: clamav}
  - {name: snort, release: snort}

  instances: 1
  resource_pool: riemann_z1
  persistent_disk: 30000
  networks:
  - name: monitoring
    static_ips: (( static_ips(0) ))

- name: influxdb
  templates:
  - {name: influxdb, release: influxdb}
  - {name: collectd, release: collectd}
  - {name: harden, release: fisma}
  - {name: tripwire, release: tripwire}
  - {name: awslogs, release: awslogs}
  - {name: nessus-agent, release: nessus-agent}
  - {name: newrelic-monitor, release: newrelic}
  - {name: riemannc, release: riemannc}
  - {name: clamav, release: clamav}
  instances: 1
  resource_pool: xlarge_z1
  persistent_disk: 500000
  networks:
  - name: monitoring
    static_ips: (( static_ips(1) ))

properties:
  env: monitoring
  collectd:
    hostname_prefix: (( meta.environment "." ))
    riemann_server: (( meta.collectd.riemann_server ))
  encrypt-blobstore:
    buckets: (( properties.encrypt-blobstore.buckets ))
    access_key: (( meta.aws.access_key_id ))
    secret_access_key: (( meta.aws.secret_access_key ))
  grafana:
    admin_username: (( meta.grafana.user ))
    admin_password: (( meta.grafana.pass ))
    listen_port: 3000
    root_url: https://metrics.fr.cloud.gov
    auth:
      github:
        enabled: true
        client_id: (( meta.grafana.auth.github.client_id ))
        client_secret: (( meta.grafana.auth.github.client_secret ))
        allowed_sign_up: true
        auth_url: https://github.com/login/oauth/authorize
        token_url: https://github.com/login/oauth/access_token
        api_url: https://api.github.com/user
        team_ids: (( meta.grafana.auth.github.team_ids ))
        allowed_organizations: (( meta.grafana.auth.github.allowed_organizations ))
    datasources:
      - database_type: "influxdb"
        database_name: (( meta.influxdb.database ))
        url: (( "http://" jobs.influxdb.networks.monitoring.static_ips.[0] ":8086" ))
        name: "influxdb_production"
        user: (( meta.grafana.influxdb_user ))
        password: (( meta.grafana.influxdb_password ))
    dashboards:
      - path: dashboards/all-in-one-cf-components-dashboard.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/cloud-controller.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/dea.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/doppler-server.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/gorouter.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/metron-agent.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/syslog.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/traffic-controller.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/uaa.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring
      - path: dashboards/etcd.json
        branch: master
        repo_url: https://raw.githubusercontent.com/18F/cg-deploy-monitoring

  influxdb:
    database: (( meta.influxdb.database ))
    user: (( meta.influxdb.user ))
    password: (( meta.influxdb.password ))
  riemann:
    server: (( properties.collectd.riemann_server ))
    port: 5555
    pagerduty_api_key: (( meta.riemann.pagerduty_api_key ))
    swap:
      critical: 25
      warn: 10
    disk:
      critical: 75
      warn: 70
    influxdb:
      host: (( jobs.influxdb.networks.monitoring.static_ips.[0] ))
      username: (( meta.riemann.influxdb_user ))
      password: (( meta.riemann.influxdb_password ))
      port: 8086
      database: (( meta.influxdb.database ))
  tripwire: ~
  awslogs: ~
  nessus-agent: ~
  newrelic: ~

resource_pools:
- name: riemann_z1
  network: monitoring
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest
  cloud_properties:
    instance_type: t2.medium
    elbs: (( meta.elbs ))
    ephemeral_disk:
      size: 30000
      type: gp2
    availability_zone: us-gov-west-1a
- name: xlarge_z1
  network: monitoring
  stemcell:
    name: bosh-aws-xen-hvm-ubuntu-trusty-go_agent
    version: latest
  cloud_properties:
    instance_type: m3.xlarge
    ephemeral_disk:
      size: 30000
      type: gp2
    availability_zone: us-gov-west-1a


compilation:
  network: monitoring
  reuse_compilation_vms: true
  workers: 4
  cloud_properties:
    instance_type: m3.large
    ephemeral_disk:
      size: 30000
      type: gp2
    availability_zone: us-gov-west-1a

update:
  canaries: 1
  canary_watch_time: 1000-300000
  max_in_flight: 50
  serial: false
  update_watch_time: 1000-300000
