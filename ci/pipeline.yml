---
groups:
  - name: all
    jobs:
    - deploy-monitoring-tooling
    - deploy-monitoring-staging
    - deploy-monitoring-production
  - name: tooling
    jobs:
    - deploy-monitoring-tooling
  - name: staging
    jobs:
    - deploy-monitoring-staging
  - name: production
    jobs:
    - deploy-monitoring-production

jobs:
- name: deploy-monitoring-tooling
  plan:
  - aggregate:
    - get: monitoring-config
      trigger: true
    - get: common-tooling
    - get: pipeline-tasks
    - get: cg-s3-riemann-release
    - get: cg-s3-influxdb-release
    - get: cg-s3-collectd-release
    - get: cg-s3-grafana-release
    - get: cg-s3-encrypt-blobstore-release
    - get: monitoring-stemcell
  - task: monitoring-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: monitoring-config
        - name: common-tooling
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: monitoring-config/monitoring.yml
        MERGE_FILES: common-tooling/secrets.yml
  - put: monitoring-tooling-deployment
    params:
      cert: common-tooling/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases: &releases
        - cg-s3-influxdb-release/influxdb*.tgz
        - cg-s3-riemann-release/riemann*.tgz
        - cg-s3-grafana-release/grafana*.tgz
        - cg-s3-collectd-release/collectd*.tgz
        - cg-s3-encrypt-blobstore-release/encrypt-blobstore-*.tgz
      stemcells:
        - monitoring-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy monitoring on tooling
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed monitoring on tooling
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: deploy-monitoring-staging
  plan:
  - aggregate:
    - get: monitoring-config
      trigger: true
    - get: common-stage
    - get: pipeline-tasks
    - get: cg-s3-riemann-release
    - get: cg-s3-influxdb-release
    - get: cg-s3-collectd-release
    - get: cg-s3-grafana-release
    - get: cg-s3-encrypt-blobstore-release
    - get: monitoring-stemcell
  - task: monitoring-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: monitoring-config
        - name: common-stage
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: monitoring-config/monitoring.yml
        MERGE_FILES: common-stage/secrets.yml
  - put: monitoring-staging-deployment
    params:
      cert: common-stage/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases: <<: *releases
      stemcells:
        - monitoring-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy monitoring on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed monitoring on staging
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}

- name: deploy-monitoring-production
  serial: true
  plan:
  - aggregate:
    - get: monitoring-staging-deployment
      passed: [deploy-monitoring-staging]
    - get: monitoring-config
      passed: [deploy-monitoring-staging]
      trigger: true
    - get: common-prod
    - get: pipeline-tasks
    - get: cg-s3-riemann-release
    - get: cg-s3-influxdb-release
    - get: cg-s3-collectd-release
    - get: cg-s3-grafana-release
    - get: cg-s3-encrypt-blobstore-release
    - get: monitoring-stemcell
  - task: monitoring-manifest
    file: pipeline-tasks/spiff-merge.yml
    config:
      inputs:
        - name: pipeline-tasks
        - name: monitoring-config
        - name: common-prod
      params:
        OUTPUT_FILE: spiff-merge/manifest.yml
        SOURCE_FILE: monitoring-config/monitoring.yml
        MERGE_FILES: common-prod/secrets.yml
  - put: monitoring-production-deployment
    params:
      cert: common-prod/boshCA.crt
      manifest: spiff-merge/manifest.yml
      releases: <<: *releases
      stemcells:
        - monitoring-stemcell/*.tgz
    on_failure:
      put: slack
      params:
        text: |
          :x: FAILED to deploy monitoring on production
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}
    on_success:
      put: slack
      params:
        text: |
          :white_check_mark: Successfully deployed monitoring on production
          <$ATC_EXTERNAL_URL/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME|View build details>
        channel: {{slack-channel}}
        username: {{slack-username}}
        icon_url: {{slack-icon-url}}


resources:
- name: common-tooling
  type: cg-common
  source:
    region: {{monitoring-tooling-private-region}}
    bucket_name: {{monitoring-tooling-private-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: monitoring-tooling.yml
    secrets_passphrase: {{monitoring-tooling-private-passphrase}}
    bosh_cert: bosh.pem

- name: common-stage
  type: cg-common
  source:
    region: {{monitoring-staging-private-region}}
    bucket_name: {{monitoring-staging-private-bucket}}
    access_key_id: {{ci-access-key-id}}
    secret_access_key: {{ci-secret-access-key}}
    secrets_file: monitoring.yml
    secrets_passphrase: {{monitoring-staging-private-passphrase}}
    bosh_cert: bosh.pem

- name: common-prod
  type: cg-common
  source:
    region: {{monitoring-production-private-region}}
    bucket_name: {{monitoring-production-private-bucket}}
    access_key_id: {{monitoring-production-private-access-key-id}}
    secret_access_key: {{monitoring-production-private-secret-access-key}}
    secrets_file: monitoring.yml
    secrets_passphrase: {{monitoring-production-private-passphrase}}
    bosh_cert: bosh.pem

- name: cg-s3-collectd-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: collectd-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-influxdb-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: influxdb-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-riemann-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: riemann-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-grafana-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: grafana-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: cg-s3-encrypt-blobstore-release
  type: s3
  source:
    region_name: {{s3-bosh-releases-region}}
    access_key_id: {{ci-access-key-id}}
    bucket: {{s3-bosh-releases-bucket}}
    private: true
    regexp: encrypt-blobstore-(.*).tgz
    secret_access_key: {{ci-secret-access-key}}

- name: monitoring-config
  type: git
  source:
    uri: {{cg-deploy-monitoring-git-url}}
    branch: {{cg-deploy-monitoring-git-branch}}

- name: monitoring-stemcell
  type: s3
  source:
    access_key_id: {{ci-access-key-id}}
    bucket: cg-stemcell-images
    regexp: light-bosh-stemcell-(.*)-aws-xen-hvm-ubuntu-trusty-go_agent.tgz
    region_name: us-gov-west-1
    secret_access_key: {{ci-secret-access-key}}

- name: monitoring-tooling-deployment
  type: 18f-bosh-deployment
  source:
    target: {{monitoring-tooling-deployment-bosh-target}}
    username: {{monitoring-tooling-deployment-bosh-username}}
    password: {{monitoring-tooling-deployment-bosh-password}}
    deployment: {{monitoring-tooling-deployment-bosh-deployment}}
    ignore_ssl: false

- name: monitoring-staging-deployment
  type: 18f-bosh-deployment
  source:
    target: {{monitoring-staging-deployment-bosh-target}}
    username: {{monitoring-staging-deployment-bosh-username}}
    password: {{monitoring-staging-deployment-bosh-password}}
    deployment: {{monitoring-staging-deployment-bosh-deployment}}
    ignore_ssl: false

- name: monitoring-production-deployment
  type: 18f-bosh-deployment
  source:
    target: {{monitoring-production-deployment-bosh-target}}
    username: {{monitoring-production-deployment-bosh-username}}
    password: {{monitoring-production-deployment-bosh-password}}
    deployment: {{monitoring-production-deployment-bosh-deployment}}
    ignore_ssl: false

- name: pipeline-tasks
  type: git
  source:
    uri: {{pipeline-tasks-git-url}}
    branch: {{pipeline-tasks-git-branch}}

- name: slack
  type: slack-notification
  source:
    url: {{slack-webhook-url}}

resource_types:
- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
- name: 18f-bosh-deployment
  type: docker-image
  source:
    repository: 18fgsa/bosh-deployment-resource
- name: cg-common
  type: docker-image
  source:
    repository: 18fgsa/cg-common-resource
